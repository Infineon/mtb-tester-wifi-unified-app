diff --git a/helpers/net_activity/COMPONENT_SECURE_SOCKETS/ip4string.c b/helpers/net_activity/COMPONENT_SECURE_SOCKETS/ip4string.c
deleted file mode 100644
index 4cd384d..0000000
--- a/helpers/net_activity/COMPONENT_SECURE_SOCKETS/ip4string.c
+++ /dev/null
@@ -1,58 +0,0 @@
-/*
- * Copyright 2021, Cypress Semiconductor Corporation (an Infineon company) or
- * an affiliate of Cypress Semiconductor Corporation.  All rights reserved.
- *
- * This software, including source code, documentation and related
- * materials ("Software") is owned by Cypress Semiconductor Corporation
- * or one of its affiliates ("Cypress") and is protected by and subject to
- * worldwide patent protection (United States and foreign),
- * United States copyright laws and international treaty provisions.
- * Therefore, you may use this Software only as provided in the license
- * agreement accompanying the software package from which you
- * obtained this Software ("EULA").
- * If no EULA applies, Cypress hereby grants you a personal, non-exclusive,
- * non-transferable license to copy, modify, and compile the Software
- * source code solely for use in connection with Cypress's
- * integrated circuit products.  Any reproduction, modification, translation,
- * compilation, or representation of this Software except as specified
- * above is prohibited without the express written permission of Cypress.
- *
- * Disclaimer: THIS SOFTWARE IS PROVIDED AS-IS, WITH NO WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, NONINFRINGEMENT, IMPLIED
- * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. Cypress
- * reserves the right to make changes to the Software without notice. Cypress
- * does not assume any liability arising out of the application or use of the
- * Software or any product or circuit described in the Software. Cypress does
- * not authorize its products for use in any products where a malfunction or
- * failure of the Cypress product may reasonably be expected to result in
- * significant property damage, injury or death ("High Risk Product"). By
- * including Cypress's product in a High Risk Product, the manufacturer
- * of such system or application assumes all risk of such use and in doing
- * so agrees to indemnify Cypress against all liability.
- */
-
-/*******************************************************************************
-* File Name: ip4string.c
-*
-* Version: 1.0
-*
-* Description: This file implements the functions needed to convert IPv4 address to string
-* and vice versa
-*
-********************************************************************************/
-#include <stdio.h>
-#include <string.h>
-#include "ip4string.h"
-#include <whd_utils.h>
-
-uint8_t ip4tos(const void *ip4addr, char *p)
-{
-   /* Call WHD API to convert IPv4 to string */
-   return whd_ip4_to_string(ip4addr, p);
-}
-
-bool stoip4(const char *ip4addr, size_t len, void *dest)
-{
-    return whd_str_to_ip(ip4addr, len, dest);
-}
-
diff --git a/helpers/net_activity/COMPONENT_SECURE_SOCKETS/network_activity_handler.c b/helpers/net_activity/COMPONENT_SECURE_SOCKETS/network_activity_handler.c
index ca5c00e..0939d2b 100644
--- a/helpers/net_activity/COMPONENT_SECURE_SOCKETS/network_activity_handler.c
+++ b/helpers/net_activity/COMPONENT_SECURE_SOCKETS/network_activity_handler.c
@@ -26,6 +26,7 @@
 #include "network_activity_handler.h"
 #include "cyabs_rtos.h"
 #include "cy_network_mw_core.h"
+#include "cy_wcm.h"

 #include "cy_OlmInterface.h"
 #include "whd_int.h"
@@ -343,7 +344,7 @@ int32_t cylpa_wait_net_inactivity(uint32_t inactive_interval_ms, uint32_t inacti

     return state;
 }
-
+extern bool is_sta_network_up;
 int32_t wait_net_suspend(void *net_intf, uint32_t wait_ms, uint32_t network_inactive_interval_ms,
         uint32_t network_inactive_window_ms)
 {
@@ -362,9 +363,16 @@ int32_t wait_net_suspend(void *net_intf, uint32_t wait_ms, uint32_t network_inac
     }

     cyhal_syspm_lock_deepsleep();
+
+#ifdef ULP_SUPPORT
+    extern whd_interface_t whd_ifs[WHD_INTERFACE_MAX];
+    uint32_t set_ulp_mode = ULP_DS2_SUPPORT;
+    whd_wifi_config_ulp_mode(whd_ifs[CY_WCM_INTERFACE_TYPE_STA], &set_ulp_mode, &network_inactive_window_ms);
+#endif
+
     state = cylpa_wait_net_inactivity(network_inactive_interval_ms, network_inactive_window_ms);

-    if (ST_SUCCESS == state)
+    if ((ST_SUCCESS == state) && (is_sta_network_up == 1))
     {
         /* Suspend network stack.
          * State data (e.g. caches) may be adjusted here so that the stack resumes properly.
